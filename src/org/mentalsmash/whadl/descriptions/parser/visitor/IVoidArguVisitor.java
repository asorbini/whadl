/* Generated by JTB 1.4.6 */
package org.mentalsmash.whadl.descriptions.parser.visitor;

import org.mentalsmash.whadl.descriptions.parser.nodes.*;

/**
 * All "VoidArgu" visitors must implement this interface.
 * @param <A> The user argument type
 */
public interface IVoidArguVisitor<A> {

  /*
   * Base "VoidArgu" visit methods
   */

  /**
   * Visits a {@link NodeList} node, passing it an argument.
   *
   * @param n the node to visit
   * @param argu the user argument
   */
  public void visit(final NodeList n, final A argu);

  /**
   * Visits a {@link NodeListOptional} node, passing it an argument.
   *
   * @param n the node to visit
   * @param argu the user argument
   */
  public void visit(final NodeListOptional n, final A argu);

  /**
   * Visits a {@link NodeOptional} node, passing it an argument.
   *
   * @param n the node to visit
   * @param argu the user argument
   */
  public void visit(final NodeOptional n, final A argu);


  /**
   * Visits a {@link NodeSequence} node, passing it an argument.
   *
   * @param n the node to visit
   * @param argu the user argument
   */
  public void visit(final NodeSequence n, final A argu);

  /**
   * Visits a {@link NodeToken} node, passing it an argument.
   *
   * @param n the node to visit
   * @param argu the user argument
   */
  public void visit(final NodeToken n, final A argu);

  /*
   * User grammar generated visit methods
   */

  /**
   * Visits a {@link Descriptions} node, whose children are the following :
   * <p>
   * f0 -> EntityDescription()<br>
   * f1 -> ( EntityDescription() )*<br>
   *
   * @param n the node to visit
   * @param argu the user argument
   */
  public void visit(final Descriptions n, final A argu);

  /**
   * Visits a {@link EntityDescription} node, whose children are the following :
   * <p>
   * f0 -> EntityId()<br>
   * f1 -> < TEXT ><br>
   *
   * @param n the node to visit
   * @param argu the user argument
   */
  public void visit(final EntityDescription n, final A argu);

  /**
   * Visits a {@link EntityId} node, whose children are the following :
   * <p>
   * f0 -> < IDENTIFIER ><br>
   * f1 -> ( #0 ( %0 "."<br>
   * .. .. . .. | %1 "#" ) #1 < IDENTIFIER > )*<br>
   *
   * @param n the node to visit
   * @param argu the user argument
   */
  public void visit(final EntityId n, final A argu);

}
